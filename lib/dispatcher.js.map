{"version":3,"sources":["../src/dispatcher.js"],"names":[],"mappings":";;AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEjC,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;AAC1B,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,IAAI,WAAW,GAAG,KAAK,CAAC;;AAExB,SAAS,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE;AAC/B,MAAI,WAAW,EAAE;AACf,WAAO,OAAO,CAAC,MAAM,CAAC,qDAAqD,CAAC,CAAC;GAC9E;AACD,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,eAAW,GAAG,IAAI,CAAC;AACnB,UAAM,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACjC,QAAI;AACF,SAAG,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;AACzC,iBAAW,EAAE,CAAC;AACd,aAAO,EAAE,CAAC;KACX,SAAS;AACR,YAAM,CAAC,aAAa,EAAE,CAAC;AACvB,iBAAW,GAAG,KAAK,CAAC;KACrB;GACF,CAAC,CAAC;CACJ;;AAED,SAAS,KAAK,CAAC,IAAI,EAAE;AACnB,MAAI,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AACtC,WAAO,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC;GAC3B,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACnB,SAAO,QAAQ,CAAC;CACjB;;AAED,SAAS,gBAAgB,CAAC,KAAK,EAAE;AAC/B,MAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE;AACnC,eAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACzB;CACF;;AAED,SAAS,eAAe,GAAG;AACzB,MAAI,MAAM,GAAG,WAAW,CAAC;AACzB,aAAW,GAAG,EAAE,CAAC;AACjB,GAAC,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE;AAC9B,SAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GAClC,CAAC,CAAC;CACJ;;AAED,SAAS,WAAW,GAAG;AACrB,MAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AACvB,UAAM,CAAC,gBAAgB,EAAE,CAAC;AAC1B,WAAO;GACR;AACD,MAAI,IAAI,GAAG,KAAK,CAAC;AACjB,SAAM,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5B,UAAM,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AACzC,mBAAe,EAAE,CAAC;AAClB,QAAI,GAAG,IAAI,CAAC;GACb;CACF;;AAED,MAAM,CAAC,OAAO,GAAG;AACf,UAAQ,EAAE,QAAQ;AAClB,OAAK,EAAE,KAAK;AACZ,kBAAgB,EAAE,gBAAgB;CACnC,CAAC","file":"dispatcher.js","sourcesContent":["var _ = require('lodash');\nvar Bacon = require('baconjs');\nvar logger = require('./logger');\n\nvar bus = new Bacon.Bus();\nvar dirtyStores = [];\nvar dispatching = false;\n\nfunction dispatch(type, payload) {\n  if (dispatching) {\n    return Promise.reject('Cascading dispatches are prohibited. Fix your flux.');\n  }\n  return new Promise(function (resolve, reject) {\n    dispatching = true;\n    logger.logMessage(type, payload);\n    try {\n      bus.push({type: type, payload: payload});\n      pushChanges();\n      resolve();\n    } finally {\n      logger.logMessageEnd();\n      dispatching = false;\n    }\n  });\n}\n\nfunction input(type) {\n  var payloads = bus.filter(function (msg) {\n     return msg.type === type;\n  }).map('.payload');\n  return payloads;\n}\n\nfunction markStoreAsDirty(store) {\n  if (!_.contains(dirtyStores, store)) {\n    dirtyStores.push(store);    \n  }\n}\n\nfunction pushChangesOnce() {\n  var stores = dirtyStores;\n  dirtyStores = [];\n  _.each(stores, function (store) {\n    store.changes.push(store.output);      \n  });\n}\n\nfunction pushChanges() {\n  if (!dirtyStores.length) {\n    logger.logNoDirtyStores();\n    return;\n  }\n  var also = false;\n  while(dirtyStores.length > 0) {\n    logger.logDirtyStores(dirtyStores, also);\n    pushChangesOnce();\n    also = true;\n  }\n}\n\nmodule.exports = {\n  dispatch: dispatch,\n  input: input,\n  markStoreAsDirty: markStoreAsDirty\n};\n"]}