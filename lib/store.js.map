{"version":3,"sources":["../src/store.js"],"names":[],"mappings":";;;;;;;;;;sBAAmB,QAAQ;;IAAf,CAAC;;uBACK,SAAS;;;;0BACJ,cAAc;;;;AAErC,SAAS,kBAAkB,CAAC,IAAI,EAAE;AAChC,SAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAA,GAAG;WAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC;GAAA,CAAC,CAAC;CACnE;;AAED,SAAS,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;AAC/C,GAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAA,GAAG,EAAI;AACrB,UAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;GACzC,CAAC,CAAC;CACJ;;AAED,SAAS,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE;AACtC,WAAS,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;AAChC,UAAM,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;AACvC,YAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;AAChC,8BAAW,gBAAgB,CAAC,MAAM,CAAC,CAAC;KACrC,CAAC,CAAC;GACJ;AACD,QAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;CAC5B;;AAED,SAAS,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE;AAChC,MAAM,OAAO,GAAG,IAAI,qBAAM,GAAG,EAAE,CAAC;AAChC,MAAM,GAAG,GAAG;AACV,eAAW,EAAE,WAAW;AACxB,UAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC;AACjC,WAAO,EAAE,OAAO;GACjB,CAAC;;AAEF,MAAM,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACzC,kBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;AACrC,WAAS,CAAC,IAAI,EAAE,GAAG,EAAE,wBAAW,KAAK,CAAC,IAAI,yBAAY,CAAC,CAAC;AACxD,SAAO,GAAG,CAAC;CACZ;;qBAEc,KAAK","file":"store.js","sourcesContent":["import * as _ from 'lodash';\nimport Bacon from 'baconjs';\nimport Dispatcher from './dispatcher';\n\nfunction gatherStoreMethods(spec) {\n  return _.reject(_.keys(spec), key => _.contains(['output'], key));\n}\n\nfunction bindStoreMethods(spec, target, methods) {\n  _.each(methods, key => {\n    target[key] = _.bind(spec[key], target);\n  });\n}\n\nfunction wireStore(spec, target, input) {\n  function output(stream, property) {\n    stream.skipDuplicates().onValue(value => {\n      target.output[property] = value;\n      Dispatcher.markStoreAsDirty(target);\n    });\n  }\n  target.wire(input, output);\n}\n\nfunction store(displayName, spec) {\n  const changes = new Bacon.Bus();\n  const obj = {\n    displayName: displayName,\n    output: _.extend({}, spec.output),\n    changes: changes,\n  };\n\n  const methods = gatherStoreMethods(spec);\n  bindStoreMethods(spec, obj, methods);\n  wireStore(spec, obj, Dispatcher.input.bind(Dispatcher));\n  return obj;\n}\n\nexport default store;\n"]}